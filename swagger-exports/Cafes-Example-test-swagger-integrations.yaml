---
swagger: "2.0"
info:
  version: "2016-01-31T17:57:09Z"
  title: "Cafes-Example"
host: "zeu2xasnwl.execute-api.us-west-2.amazonaws.com"
basePath: "/poc"
schemes:
- "https"
paths:
  /cafes:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      x-amazon-apigateway-integration:
        type: "aws"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "{\n  \"operation\": \"GET_COLLECTION\",\n  \"payload\"\
            : {}\n}"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:182026393062:function:lambda_cafes/invocations"
        httpMethod: "POST"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      x-amazon-apigateway-integration:
        type: "aws"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "{\n  \"operation\": \"$context.httpMethod\",\n  \"payload\"\
            : $input.json('$')\n}"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:182026393062:function:lambda_cafes/invocations"
        httpMethod: "POST"
  /cafes/{id}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      x-amazon-apigateway-integration:
        type: "aws"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "{\n    \"resource\": \"cafe\",    \n    \"operation\"\
            :\"$context.httpMethod\",\n    \"payload\": {\n        \"id\": \"$input.params('id')\"\
            \n    }\n}"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:182026393062:function:lambda_cafes/invocations"
        httpMethod: "POST"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      x-amazon-apigateway-integration:
        type: "aws"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "{\n    \"resource\": \"cafe\",\n    \"operation\":\"\
            $context.httpMethod\",\n    \"payload\": {\n        \"id\": \"$input.params('id')\"\
            \n    }\n}"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:182026393062:function:lambda_cafes/invocations"
        httpMethod: "POST"
  /login:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      x-amazon-apigateway-integration:
        type: "aws"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "{\n    \"resource\":\"auth\",\n    \"operation\": \"\
            login\",\n    \"payload\": $input.json('$')\n}"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:182026393062:function:lambda_cafes/invocations"
        httpMethod: "POST"
  /register:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      x-amazon-apigateway-integration:
        type: "aws"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:182026393062:function:lambda_cafes/invocations"
        httpMethod: "POST"
definitions:
  Empty:
    type: "object"
